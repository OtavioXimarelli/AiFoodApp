spring:
  application:
    name: AiFoodApp

  datasource:
    url: jdbc:postgresql://fodoappadmin:B0KxKObuFE6Jq3THpPA22AknbeRXliaq@dpg-d2vnjr8dl3ps739ckk80-a/food_db_bqej
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      initialization-fail-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: none  # Changed from 'update' to 'none' to avoid conflict with Flyway
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  # Spring Session Configuration for persistent token storage
  session:
    store-type: jdbc
    jdbc:
      initialize-schema: never  # Schema already created by Flyway
      table-name: SPRING_SESSION
      cleanup-cron: "0 0 4 * * *"  # Cleanup expired sessions at 4 AM daily
    timeout: 2592000  # 30 days in seconds
    cookie:
      name: JSESSIONID  # Use standardized name
      max-age: 2592000  # 30 days in seconds
      secure: ${COOKIE_SECURE:true}  # true in production
      http-only: true
      same-site: ${COOKIE_SAME_SITE:none}  # 'lax' works best for OAuth2 flows, use 'strict' only if necessary
      # Remove leading dot if present - Spring Security doesn't accept domains starting with dot
      
  # Google OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
              - https://www.googleapis.com/auth/userinfo.email
              - https://www.googleapis.com/auth/userinfo.profile
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_basic
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: email
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs


# Maritaca AI Configuration
maritaca:
  api:
    url: ${MARITACA_API_URL:https://chat.maritaca.ai/api/chat/completions}
    key: ${MARITACA_API_KEY:}
    model: ${MARITACA_API_MODEL:sabia-3.1}
  system:
    prompt: ${MARITACA_SYSTEM_PROMPT:"Vocé um assistente culinário"}



# App Configuration
app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:8082}
  debug:
    enabled: ${APP_DEBUG_ENABLED:false}  # Enable debug features only when explicitly set

# Loggingout
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.web: DEBUG

# Server Configuration
server:
  forward-headers-strategy: native  # Use native container support for forwarded headers
  error:
    include-stacktrace: never  # Don't include stacktraces in error responses
    include-message: always    # Include error messages in responses