services:
  postgres:
    image: postgres:15
    container_name: postgresDB
    environment:
      POSTGRES_DB: foodDB
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - aifood-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  aifoodapp:
    build: .
    container_name: aifoodapp
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      MARITACA_API_KEY: ${MARITACA_API_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
      COOKIE_SECURE: "true"
      COOKIE_DOMAIN: "aifoodapp.site"
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - aifood-net
    deploy:
      resources:
        limits:
          memory: 1g

volumes:
  postgres_data:

networks:
  aifood-net: